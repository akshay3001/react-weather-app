{"version":3,"sources":["SeasonDisplay.js","Loader.js","index.js"],"names":["SeasonConfig","summer","text","iconName","winter","SeasonDisplay","props","lat","month","season","Date","getMonth","className","Loader","console","log","loadingText","defaultProps","App","state","errMessage","loaderMessage","year","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","message","this","style","minHeight","margin","React","Component","ReactDOM","render","document","querySelector"],"mappings":"sMAGMA,G,MAAe,CACjBC,OAAQ,CACJC,KAAM,kBACNC,SAAU,OAEdC,OAAQ,CACJF,KAAM,kBACNC,SAAU,eA0BHE,EAbO,SAACC,GACnB,IAVeC,EAAKC,EAUdC,GAVSF,EAUUD,EAAMC,KAVXC,GAUgB,IAAIE,MAAOC,YATnC,GAAKH,EAAQ,EACdD,EAAM,EAAI,SAAW,SAGrBA,EAAM,EAAI,SAAW,UAIH,EAEFP,EAAaS,GAAhCP,EAFqB,EAErBA,KAAMC,EAFe,EAEfA,SAEd,OACI,yBAAKS,UAAS,yBAAoBH,IAC9B,uBAAGG,UAAS,oBAAeT,EAAf,mBACZ,4BAAKD,GACL,uBAAGU,UAAS,qBAAgBT,EAAhB,qBC7BlBU,EAAS,SAAAP,GAGX,OAFAQ,QAAQC,IAAIT,GAGR,yBAAKM,UAAU,oBACX,yBAAKA,UAAU,kBAAkBN,EAAMU,eAKnDH,EAAOI,aAAe,CAClBD,YAAa,kCAGFH,QCTTK,E,2MACFC,MAAQ,CACJZ,IAAK,KACLa,WAAY,GACZC,cAAe,qC,EAEnBC,KAAO,IAAIZ,K,mFAEU,IAAD,OAEhBa,OAAOC,UAAUC,YAAYC,oBACzB,SAAAC,GAAQ,OAAI,EAAKC,SAAS,CAAErB,IAAKoB,EAASE,OAAOC,SAAUV,WAAY,QACvE,SAAAW,GAAG,OAAI,EAAKH,SAAS,CAAER,WAAYW,EAAIC,e,+BAO3C,OAAIC,KAAKd,MAAMC,WAEP,6BACI,sCAAYa,KAAKd,MAAMC,aAK/Ba,KAAKd,MAAMZ,IAEP,6BACI,6BAAS2B,MAAO,CAACC,UAAU,QAASC,OAAQ,iBACxC,kBAAC,EAAD,CAAe7B,IAAK0B,KAAKd,MAAMZ,QAOxC,kBAAC,EAAD,U,GAtCG8B,IAAMC,WA4CxBC,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,cAAc,W","file":"static/js/main.94dd9116.chunk.js","sourcesContent":["import './SeasonDisplay.css';\r\nimport React from 'react';\r\n\r\nconst SeasonConfig = {\r\n    summer: {\r\n        text: \"let's hit beach\",\r\n        iconName: 'sun'\r\n    },\r\n    winter: {\r\n        text: \"Its chilly here\",\r\n        iconName: 'snowflake'\r\n    }\r\n}\r\n\r\nconst getSeason = (lat, month) => {\r\n    if (month > 2 && month < 9) {\r\n        return lat > 0 ? 'summer' : 'winter'\r\n    }\r\n    else {\r\n        return lat > 0 ? 'winter' : 'summer'\r\n    }\r\n}\r\n\r\nconst SeasonDisplay = (props) => {\r\n    const season = getSeason(props.lat, new Date().getMonth());\r\n    const { text, iconName } = SeasonConfig[season];\r\n\r\n    return (\r\n        <div className={`season-display ${season}`}>\r\n            <i className={`icon-left ${iconName} icon massive`}></i>\r\n            <h1>{text}</h1>\r\n            <i className={`icon-right ${iconName} icon massive`}></i>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SeasonDisplay","import React from 'react'\r\n\r\nconst Loader = props => {\r\n    console.log(props);\r\n    \r\n    return (\r\n        <div className=\"ui active dimmer\">\r\n            <div className=\"ui text loader\">{props.loadingText}</div>\r\n        </div>\r\n    );  \r\n};\r\n\r\nLoader.defaultProps = {\r\n    loadingText: 'Please Accept location request'\r\n}\r\n\r\nexport default Loader\r\n\r\n","// Imports\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport SeasonDisplay from './SeasonDisplay';\r\nimport Loader from './Loader';\r\n\r\n// Create class component\r\nclass App extends React.Component {\r\n    state = {\r\n        lat: null,\r\n        errMessage: '',\r\n        loaderMessage: 'Allow the website to use location'\r\n    }\r\n    year = new Date()\r\n\r\n    componentDidMount() {\r\n        // Get user location\r\n        window.navigator.geolocation.getCurrentPosition(\r\n            position => this.setState({ lat: position.coords.latitude, errMessage: '' }),\r\n            err => this.setState({ errMessage: err.message })\r\n        );\r\n    }\r\n\r\n    // Render function\r\n    render() {\r\n        // Conditional - if geolocation api has error\r\n        if (this.state.errMessage) {\r\n            return (\r\n                <div>\r\n                    <h2>Error: {this.state.errMessage}</h2>\r\n                </div>\r\n            );\r\n        }\r\n        // Conditional - if geolocation api receives latitude\r\n        if (this.state.lat) {\r\n            return (\r\n                <div>\r\n                    <section style={{minHeight:'100vh', margin: '0 auto -60px'}}>\r\n                        <SeasonDisplay lat={this.state.lat} />\r\n                    </section>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        // Loading screen till geolocation API receives response\r\n        return <Loader />\r\n\r\n    }\r\n}\r\n\r\n// Render\r\nReactDOM.render(\r\n    <App />,\r\n    document.querySelector('#root')\r\n)"],"sourceRoot":""}